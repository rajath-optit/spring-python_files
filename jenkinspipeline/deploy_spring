pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'your-docker-image'
        KUBE_NAMESPACE = 'your-namespace'
        KUBE_DEPLOYMENT = 'your-deployment'
    }

    stages {
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh "kubectl config use-context your-kube-context" // Use the appropriate Kubernetes context
                    sh "kubectl set image deployment/${KUBE_DEPLOYMENT} ${KUBE_DEPLOYMENT}=${DOCKER_IMAGE}:${env.BUILD_NUMBER} -n ${KUBE_NAMESPACE}"
                }
            }
        }

        stage('Additional Deployment Steps') {
            steps {
                script {
                    // Deploy the PV and PVC
                    sh "kubectl apply -f https://k8s.io/examples/application/mysql/mysql-pv.yaml"
                    sh "kubectl apply -f https://k8s.io/examples/application/mysql/mysql-deployment.yaml"
                }
            }
        }

        stage('Verify Deployment') {
            steps {
                script {
                    timeout(time: 5, unit: 'minutes') {
                        // Add script to verify the deployment (e.g., check pod status)
                        sh "kubectl get pods -n ${KUBE_NAMESPACE}"
                    }
                }
            }
        }

        stage('Access MySQL Instance') {
            steps {
                script {
                    // Run MySQL client to connect to the server
                    sh "kubectl run -it --rm --image=mysql:5.6 --restart=Never mysql-client -- mysql -h mysql -ppassword"
                }
            }
        }
    }

    post {
        always {
            // Clean up any resources if needed
        }
        success {
            // Send success notifications
        }
        failure {
            // Send failure notifications
        }
    }
}
